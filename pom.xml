<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.garethahealy</groupId>
  <artifactId>jboss-fuse-setup</artifactId>
  <packaging>pom</packaging>
  <version>1.0.0-SNAPSHOT</version>
  <name>${project.artifactId}</name>
  
  <organization>
    <name>Gareth Healy</name>
    <url>https://github.com/garethahealy</url>
  </organization>
  
  <modules>
    <module>karaf-scripts</module>
  </modules>
  
  <properties>
    <!-- Project settings -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java-runtime>1.7</java-runtime>

    <!-- SCM / Repos -->
    <nexus-ip>localhost:8081</nexus-ip>
    
    <!-- Plugin versions -->
    <maven-bundle-plugin-version>2.3.4</maven-bundle-plugin-version>
    <maven-source-plugin-version>2.1.1</maven-source-plugin-version>
    <maven-antrun-plugin-version>1.2</maven-antrun-plugin-version>
    <maven-compiler-plugin-version>2.3.2</maven-compiler-plugin-version>
    <maven-surefire-plugin-version>2.16</maven-surefire-plugin-version>
    <depends-maven-plugin-version>1.2</depends-maven-plugin-version>
    <properties-maven-plugin-version>1.0-alpha-2</properties-maven-plugin-version>
    <ant-contrib-version>1.0b3</ant-contrib-version>
    <ant-optional-version>1.5.3-1</ant-optional-version>
    <versions-maven-plugin-version>2.0</versions-maven-plugin-version>
    <maven-resources-plugin-version>2.6</maven-resources-plugin-version>
    <build-helper-maven-plugin-version>1.7</build-helper-maven-plugin-version>

    <!-- Plugin dependancy versions -->
    <jaxb-version>2.1.13</jaxb-version>
    <jaxb-api-version>2.1</jaxb-api-version>
    
    <!-- Build propertis -->
    <build.osgi.implementation.title>ssds</build.osgi.implementation.title>
    <build.osgi.import.project.version>
      version="[$(version;==;${build.osgi.version.clean}),$(version;=+;${build.osgi.version.clean}))"
    </build.osgi.import.project.version>
    <build.osgi.import.default.version>
      [$(version;==;$(@)),$(version;+;$(@)))
    </build.osgi.import.default.version>
    <build.osgi.import.pkg>
      !${build.osgi.export.pkg},
      com.garethahealy.*;${build.osgi.import.project.version},
      *
    </build.osgi.import.pkg>
    <build.osgi.failok>false</build.osgi.failok>
    <build.osgi.private.pkg>!*</build.osgi.private.pkg>
    <build.osgi.export>${build.osgi.export.pkg};${build.osgi.version}</build.osgi.export>
    <build.osgi.version>version=${project.version}</build.osgi.version>
    <build.osgi.import>${build.osgi.import.pkg}</build.osgi.import>
    <build.osgi.symbolic.name>${project.groupId}.${project.artifactId}</build.osgi.symbolic.name>
    <build.osgi.exclude.dependencies>false</build.osgi.exclude.dependencies>
    <build.osgi.export.pkg>com.garethahealy.*</build.osgi.export.pkg>
  </properties>

  <!-- Build plguins -->
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven-source-plugin-version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>${maven-antrun-plugin-version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>properties-maven-plugin</artifactId>
          <version>${properties-maven-plugin-version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin-version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin-version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>${build-helper-maven-plugin-version}</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>${maven-antrun-plugin-version}</version>
        <inherited>true</inherited>
        <executions>
          <execution>
            <id>create-prop</id>
            <phase>initialize</phase>
            <configuration>
              <tasks>
                <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath"/>
                <property name="ant.regexp.regexpimpl" value="org.apache.tools.ant.util.regexp.Jdk14RegexpRegexp"/>
                <property name="mv" value="${project.version}"/>
                <echo message="Maven version: ${mv}"/>
                <propertyregex property="ov.p1" input="${mv}" regexp="(\d+)(?:\.(\d+)(?:\.(\d+))?)?(?:[^a-zA-Z0-9](.*))?" replace="\1" defaultValue="0"/>
                <propertyregex property="ov.p2" input="${mv}" regexp="(\d+)(?:\.(\d+)(?:\.(\d+))?)?(?:[^a-zA-Z0-9](.*))?" replace=".\2" defaultValue=".0"/>
                <propertyregex property="ov.p3" input="${mv}" regexp="(\d+)(?:\.(\d+)(?:\.(\d+))?)?(?:[^a-zA-Z0-9](.*))?" replace=".\3" defaultValue=".0"/>
                <propertyregex property="ov.p4" input="${mv}" regexp="(\d+)(?:\.(\d+)(?:\.(\d+))?)?(?:[^a-zA-Z0-9](.*))?" replace=".\4" defaultValue=""/>
                <propertyregex property="ov.p1a" input="${ov.p1}" regexp="(.+)" replace="\1" defaultValue="0"/>
                <propertyregex property="ov.p2a" input="${ov.p2}" regexp="(\..+)" replace="\1" defaultValue=".0"/>
                <propertyregex property="ov.p3a" input="${ov.p3}" regexp="(\..+)" replace="\1" defaultValue=".0"/>
                <propertyregex property="ov.p4a" input="${ov.p4}" regexp="(\..+)" replace="\1" defaultValue=""/>
                <property name="ov" value="${ov.p1a}${ov.p2a}${ov.p3a}${ov.p4a}"/>
                <property name="os" value="${ov.p1a}${ov.p2a}"/>
                <echo message="OSGi version: ${ov}"/>
                <mkdir dir="target"/>
                <echo file="target/build.osgi.version.txt">
		  build.osgi.version.clean = ${ov}
		  garethahealy.schema.version = ${os}
		</echo>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>${jaxb-api-version}</version>
          </dependency>
          <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
            <version>${jaxb-version}</version>
          </dependency>
          <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-xjc</artifactId>
            <version>${jaxb-version}</version>
          </dependency>
          <dependency>
            <groupId>ant-contrib</groupId>
            <artifactId>ant-contrib</artifactId>
            <version>${ant-contrib-version}</version>
          </dependency>
          <dependency>
            <groupId>ant</groupId>
            <artifactId>ant-optional</artifactId>
            <version>${ant-optional-version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <inherited>true</inherited>
        <executions>
          <execution>
            <phase>initialize</phase>
            <goals>
              <goal>read-project-properties</goal>
            </goals>
            <configuration>
              <files>
                <file>target/build.osgi.version.txt</file>
              </files>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <extensions>true</extensions>
        <version>${maven-bundle-plugin-version}</version>
        <inherited>true</inherited>
        <configuration>
          <excludeDependencies>${build.osgi.exclude.dependencies}</excludeDependencies>
          <instructions>
            <Bundle-Name>${project.artifactId}</Bundle-Name>
            <Bundle-SymbolicName>${build.osgi.symbolic.name}</Bundle-SymbolicName>
            <Export-Package>${build.osgi.export}</Export-Package>
            <Import-Package>${build.osgi.import}</Import-Package>
            <Private-Package>${build.osgi.private.pkg}</Private-Package>
            <Implementation-Title>${build.osgi.implementation.title}</Implementation-Title>
            <Implementation-Version>${project.version}</Implementation-Version>
            <_versionpolicy>${build.osgi.import.default.version}</_versionpolicy>
            <_failok>${build.osgi.failok}</_failok>
            <Embed-Dependency>${build.osgi.embed}</Embed-Dependency>
            <Export-Service>${build.osgi.service.export}</Export-Service>
          </instructions>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin-version}</version>
        <configuration>
          <source>${java-runtime}</source>
          <target>${java-runtime}</target>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <configuration>
          <archive>
            <manifestEntries>
              <Bundle-SymbolicName>${project.groupId}.${project.artifactId}.source</Bundle-SymbolicName>
              <Bundle-Version>${build.osgi.version.clean}</Bundle-Version>
              <Eclipse-SourceBundle>${project.groupId}.${project.artifactId};version="${build.osgi.version.clean}"</Eclipse-SourceBundle>
            </manifestEntries>
          </archive>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin-version}</version>
        <executions>
          <execution>
            <configuration>
              <reuseForks>false</reuseForks>
              <forkCount>1</forkCount>
              <useSystemClassLoader>true</useSystemClassLoader>
              <useManifestOnlyJar>false</useManifestOnlyJar>
              <failIfNoTests>false</failIfNoTests>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.servicemix.tooling</groupId>
        <artifactId>depends-maven-plugin</artifactId>
        <version>${depends-maven-plugin-version}</version>
        <executions>
          <execution>
            <id>generate-depends-file</id>
            <goals>
              <goal>generate-depends-file</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>${versions-maven-plugin-version}</version>
      </plugin>
    </plugins>
  </build>

  <!-- Components -->
  <dependencyManagement>
    <dependencies>
      <!-- Camel -->
      <dependency>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-core</artifactId>
        <version>${camel-version}</version>
        <scope>provided</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  
  <distributionManagement>
    <repository>
      <uniqueVersion>false</uniqueVersion>
      <id>releases</id>
      <name>libs-release</name>
      <url>http://${nexus-ip}/nexus/content/repositories/releases</url>
    </repository>
    <snapshotRepository>
      <uniqueVersion>false</uniqueVersion>
      <id>snapshots</id>
      <name>libs-snapshot</name>
      <url>file:/home/gahealy/.m2/repository</url>
    </snapshotRepository>
  </distributionManagement>
</project>
